#summary Start here

= Introduction =

DOM Xss Test Cases Wiki Project

= Details =

== Sources ==

=== location/documentURI/URL ===

Considering the classic url format:
scheme://user:pass@host/path/to/page.ext/Pathinfo?search.location=value#hash=value&hash2=value2

Given the url:

http://host/path/to/page.ext/test<a"'%0A`= +%20>;test<a"'%0A`= +%20>?test<a"'%0A`= +%20>;#test<a"'%0A`= +%20>;

the following table shows how direct call of
 * location
 * location.href
 * location.search
 * location.hash
 * location.pathname
 * document.URL
 * document.documentURI
 * document.URLUnencoded (IE 5.5 or later Only)
 * document.baseURI

are natively treated:

|| *Source* || *browser* || *version* || *output* ||
|| location ||   IE 8     ||  8       ||     http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test<a"'%0A=%20+%20>;#test<a"'%0A=%20+%20>;      ||
|| location.href ||   IE 8     ||  8       ||    http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test<a"'%0A=%20+%20>;#test<a"'%0A=%20+%20>;   ||
|| location.search ||   IE 8     ||  8       ||    ?test<a"'%0A=%20+%20>;    ||
|| location.hash ||   IE 8     ||  8       ||     #test<a"'%0A=%20+%20>;    ||
|| location.pathname ||   IE 8     ||  8       ||       /path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E   ||
|| document.URL ||   IE 8     ||  8       ||     http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test<a"'%0A=%20+%20>;#test<a"'%0A=%20+%20>; ||
|| document.documentURI ||   IE 8     ||  8       ||     undefined     ||
|| document.URLUnencoded ||   IE 8     ||  8       ||     http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test<a"'%0A=%20+%20>;#test<a"'%0A=%20+%20>;  ||
|| document.baseURI ||   IE 8     ||  8       ||     undefined     ||
|| location ||   Opera     ||  10.61       ||     http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test%3Ca%22'%0A=%20+%20%3E;#test<a"'%0A= +%20>;    ||
|| location.href ||     Opera     ||  10.61       ||  http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test%3Ca%22'%0A=%20+%20%3E;#test<a"'%0A= +%20>;    ||
|| location.search ||    Opera     ||  10.61        ||  ?test%3Ca%22'%0A=%20+%20%3E;    ||
|| location.hash ||     Opera     ||  10.61       ||     #test<a"'%0A= +%20>;   ||
|| location.pathname ||    Opera     ||  10.61        ||   /path/to/page.ext/test<a"'%0A= + >;test<a"'%0A= + > ||
|| document.URL ||    Opera     ||  10.61     ||  http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test%3Ca%22'%0A=%20+%20%3E;#test<a"'%0A= +%20>;   ||
|| document.documentURI ||    Opera     ||  10.61        ||     http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test%3Ca%22'%0A=%20+%20%3E;      ||
|| document.URLUnencoded ||   Opera     ||  10.61         ||  undefined    ||
|| document.baseURI ||     Opera     ||  10.61         ||     http://host/path/to/page.ext/test%3Ca%22'%0A=%20+%20%3E;test%3Ca%22'%0A=%20+%20%3E?test%3Ca%22'%0A=%20+%20%3E;      ||


=== Cookie ===

 * document.cookie


=== referrer ===
The following table shows how direct call of
 * document.referrer


=== name === 

 * window.name

=== Other Objects ===

 * opener (IE <= 7 Only)
 * parent.obj
 * top.obj
 * frames`[`i`]`.obj
 * event.data of onmessage event for postMessage method

= Glossary =

*Source:*
an input that could be controlled by an external (untrusted) source.

*Sink:*
a sink is a potentially dangerous method that could lead to a vulnerability.
In this case a DOM Based Xss.

= References =
[http://www.webappsec.org/projects/articles/071105.shtml "DOM Based Cross Site Scripting or XSS of the Third Kind"], A. Klein, 2005.

[http://blog.watchfire.com/wfblog/2008/06/javascript-code.html "JavaScript Code Flow Manipulation, and a real world example advisory - Adobe Flex 3 Dom-Based XSS"], O. Segal & A. Sharabani, A. Yogev, June 2008.

[http://www.ruxcon.org.au/files/2008/Attacking_Rich_Internet_Applications.pdf Attacking_Rich_Internet_Applications], S. Di Paola & A. Kuza, 2008.